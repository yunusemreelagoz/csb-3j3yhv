{"version":3,"sources":["functional.tsx","App.tsx","index.tsx"],"names":["FunctionalIFrameComponent","props","refAy","useRef","mountNode","current","contentWindow","document","body","title","children","ref","createPortal","App","className","ReactDOM","render","getElementById"],"mappings":"iMASaA,EAA8D,SACzEC,GACI,IAAD,MACGC,EAAQC,iBAA0B,MAClCC,EAAS,UAAGF,EAAMG,eAAT,iBAAG,EAAeC,qBAAlB,iBAAG,EAA8BC,gBAAjC,aAAG,EAAwCC,KAC1D,OACE,8BACE,wBAAQC,MAAOR,EAAMS,SAAUC,IAAKT,EAApC,SACGE,GAAaQ,uBAAaX,EAAMS,SAAUN,QCdpC,SAASS,IACtB,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,CAA2BL,MAAM,wBCDvCM,IAASC,OAAO,cAACH,EAAD,IAASN,SAASU,eAAe,W","file":"static/js/main.2a194682.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\ninterface MyProps {\r\n  propInMyProps?: any;\r\n  children?: any;\r\n  title?: string;\r\n}\r\n\r\nexport const FunctionalIFrameComponent: React.FunctionComponent<MyProps> = (\r\n  props\r\n) => {\r\n  const refAy = useRef<HTMLIFrameElement>(null);\r\n  const mountNode = refAy.current?.contentWindow?.document?.body;\r\n  return (\r\n    <div>\r\n      <iframe title={props.children} ref={refAy}>\r\n        {mountNode && createPortal(props.children, mountNode)}\r\n      </iframe>\r\n    </div>\r\n  );\r\n};\r\n","import \"./styles.css\";\nimport { useRef } from \"react\";\nimport { FunctionalIFrameComponent } from \"./functional\";\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <FunctionalIFrameComponent title=\"functional-iframe\"></FunctionalIFrameComponent>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}